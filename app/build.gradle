apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "lol.nullptr.pluto"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}

// changing flag in `CMakeLists.txt` for force-check-and-build native c++
task forceUpdateCMakeLists {
    def cmakeLists = file("src/main/cpp/CMakeLists.txt")
    def text = ""
    cmakeLists.withReader { reader ->
        text = reader.text
        if (text.contains("#FCAB#")) {
            text = text.replace("#FCAB#", "#FCAB")
        }
        else if (text.contains("#FCAB")) {
            text = text.replace("#FCAB", "#FCAB#")
        }
    }
    cmakeLists.withWriter { writer ->
        writer.write(text)
    }
}
task externalNativeBuild dependsOn(forceUpdateCMakeLists)
